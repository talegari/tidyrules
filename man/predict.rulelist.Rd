% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ruleclasses.R
\name{predict.rulelist}
\alias{predict.rulelist}
\title{`predict` method for rulelist class}
\usage{
\method{predict}{rulelist}(object, new_data, raw = FALSE, ...)
}
\arguments{
\item{object}{rulelist object}

\item{new_data}{dataframe to predict}

\item{raw}{(flag, default: FALSE) Whether raw prediction are to be provided}

\item{...}{unused}
}
\value{
A dataframe indicating `rule_nbr` applicable for a `row_nbr` in
  new_data
}
\description{
Returns the `rule_nbr` applicable for a `row_nbr` in new_data
}
\details{
If a `row_nbr` is covered more than one `rule_nbr` per 'keys', then
`rule_nbr` appearing in the earlier (as in row order) takes precedence.

When raw is `FALSE`(default), output is a tidytable/dataframe with three or
more columns: `row_number` (int), columns corresponding to 'keys', `rule_nbr`
(int). If a row number is not covered by any rule, then there is one row with
all other columns other than `row_nbr` has a missing value.

When raw is `TRUE`(default), output is a tidytable/dataframe with three or
more columns: `row_number` (int), columns corresponding to 'keys', `rule_nbr`
(list of intergers). If a row number is not covered by any rule, then there
is no row corresponding the `row_nbr`.
}
\examples{
model_c5 = C50::C5.0(species ~.,
                     data = palmerpenguins::penguins,
                     trials = 5,
                     rules = TRUE
                     )
tidy_c5 = tidy(model_c5)
tidy_c5

output_1 = predict(tidy_c5, palmerpenguins::penguins)
output_1 # different rules per 'keys' (`trial_nbr` here)

output_2 = predict(tidy_c5, palmerpenguins::penguins, raw = TRUE)
output_2 # `rule_nbr` is a list-column of integer vectors

}
